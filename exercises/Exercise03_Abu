# Please write your program here
#Pseuodocode
#create a dataframe for the data
#inspect the data
#count the values foreach work status
#filter the data to underconstruction and pipeline
#group filter under affordable units (0-30, 32-50, 51-60) with MAR WARD
#sum the filtered category
#find minimum and maximum

df = pd.DataFrame(data)
#df.head()
#df.tail()

df["STATUS_PUBLIC"].value_counts()

def subset_dataframe_by_column(data, column_name, values):
    df = pd.DataFrame(data)
    return df[df[column_name].isin(values)]

def aggregate_and_sort(df, groupby_column, aggregate_columns):
    # Group by the specified column and aggregate the specified columns
    grouped_df = df.groupby(groupby_column)[aggregate_columns].sum()

    # Calculate the total column
    grouped_df['Total'] = grouped_df.sum(axis=1)

    # Sort by the total column in descending order
    grouped_df = grouped_df.sort_values(by='Total', ascending=False)

    return grouped_df[['Total']]

aggregate_and_sort(filtered_df, "MAR_WARD", ["AFFORDABLE_UNITS_AT_0_30_AMI", "AFFORDABLE_UNITS_AT_31_50_AMI", "AFFORDABLE_UNITS_AT_51_60_AMI"])

filtered_df = df[(df["STATUS_PUBLIC"].str.contains("Under Construction")) | (df["STATUS_PUBLIC"].str.contains("Pipeline"))]
filtered_df["STATUS_PUBLIC"].value_counts()

filtered_df["MAR_WARD"].value_counts()

ward_units = filtered_df.groupby("MAR_WARD")["AFFORDABLE_UNITS_AT_0_30_AMI", "AFFORDABLE_UNITS_AT_31_50_AMI", "AFFORDABLE_UNITS_AT_51_60_AMI"].sum()
ward_units

ward_units["TOTAL_AFFORDABLE_UNITS_UP_TO_60%_AMI"] = ward_units.sum(axis=1)



ward_units[["TOTAL_AFFORDABLE_UNITS_UP_TO_60%_AMI"]].sort_values("TOTAL_AFFORDABLE_UNITS_UP_TO_60%_AMI", ascending=False)

most_units_ward = ward_units[["TOTAL_AFFORDABLE_UNITS_UP_TO_60%_AMI"]].sort_values("TOTAL_AFFORDABLE_UNITS_UP_TO_60%_AMI", ascending=True).idxmax()
most_units_ward

fewest_units_ward = ward_units[["TOTAL_AFFORDABLE_UNITS_UP_TO_60%_AMI"]].sort_values("TOTAL_AFFORDABLE_UNITS_UP_TO_60%_AMI", ascending=True).idxmin()
fewest_units_ward

#Pseudocode
#find the population data set
#create a dictionary for the data
#add the population data to the filterd group data
#divide units by the population 
import pandas as pd
df = pd.DataFrame(population)
df=df.T

d={"MAR_WARD": ["Ward 1", "Ward 2", "Ward 3", "Ward 4", "Ward 5", "Ward 6",  "Ward 7", "Ward 8"], "Population": [82404, 83925, 82450, 86085, 89082, 79161, 91997, 88050]}

df=pd.DataFrame(data=d)
df_ward=ward_units.merge(df, on="MAR_WARD", how="left")

df_ward["Unit per capita"] = df_ward["TOTAL_AFFORDABLE_UNITS_UP_TO_60%_AMI"]/df_ward["Population"]
df_ward
